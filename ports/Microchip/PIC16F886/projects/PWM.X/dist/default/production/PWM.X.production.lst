

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Jan 31 09:13:14 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F886 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     008F                     	;# 
    92     0090                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0093                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0095                     	;# 
   100     0096                     	;# 
   101     0097                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009A                     	;# 
   105     009B                     	;# 
   106     009C                     	;# 
   107     009D                     	;# 
   108     009E                     	;# 
   109     009F                     	;# 
   110     0105                     	;# 
   111     0107                     	;# 
   112     0108                     	;# 
   113     0109                     	;# 
   114     010C                     	;# 
   115     010C                     	;# 
   116     010D                     	;# 
   117     010E                     	;# 
   118     010F                     	;# 
   119     0185                     	;# 
   120     0187                     	;# 
   121     0188                     	;# 
   122     0189                     	;# 
   123     018C                     	;# 
   124     018D                     	;# 
   125     0000                     	;# 
   126     0001                     	;# 
   127     0002                     	;# 
   128     0003                     	;# 
   129     0004                     	;# 
   130     0005                     	;# 
   131     0006                     	;# 
   132     0007                     	;# 
   133     0009                     	;# 
   134     000A                     	;# 
   135     000B                     	;# 
   136     000C                     	;# 
   137     000D                     	;# 
   138     000E                     	;# 
   139     000E                     	;# 
   140     000F                     	;# 
   141     0010                     	;# 
   142     0011                     	;# 
   143     0012                     	;# 
   144     0013                     	;# 
   145     0014                     	;# 
   146     0015                     	;# 
   147     0015                     	;# 
   148     0016                     	;# 
   149     0017                     	;# 
   150     0018                     	;# 
   151     0019                     	;# 
   152     001A                     	;# 
   153     001B                     	;# 
   154     001B                     	;# 
   155     001C                     	;# 
   156     001D                     	;# 
   157     001E                     	;# 
   158     001F                     	;# 
   159     0081                     	;# 
   160     0085                     	;# 
   161     0086                     	;# 
   162     0087                     	;# 
   163     0089                     	;# 
   164     008C                     	;# 
   165     008D                     	;# 
   166     008E                     	;# 
   167     008F                     	;# 
   168     0090                     	;# 
   169     0091                     	;# 
   170     0092                     	;# 
   171     0093                     	;# 
   172     0093                     	;# 
   173     0093                     	;# 
   174     0094                     	;# 
   175     0095                     	;# 
   176     0096                     	;# 
   177     0097                     	;# 
   178     0098                     	;# 
   179     0099                     	;# 
   180     009A                     	;# 
   181     009B                     	;# 
   182     009C                     	;# 
   183     009D                     	;# 
   184     009E                     	;# 
   185     009F                     	;# 
   186     0105                     	;# 
   187     0107                     	;# 
   188     0108                     	;# 
   189     0109                     	;# 
   190     010C                     	;# 
   191     010C                     	;# 
   192     010D                     	;# 
   193     010E                     	;# 
   194     010F                     	;# 
   195     0185                     	;# 
   196     0187                     	;# 
   197     0188                     	;# 
   198     0189                     	;# 
   199     018C                     	;# 
   200     018D                     	;# 
   201     0012                     _T2CONbits	set	18
   202     0011                     _TMR2	set	17
   203     001D                     _CCP2CON	set	29
   204     0012                     _T2CON	set	18
   205     001B                     _CCPR2L	set	27
   206     001F                     _ADCON0	set	31
   207     001E                     _ADRESH	set	30
   208     001F                     _ADCON0bits	set	31
   209     0087                     _TRISCbits	set	135
   210     0092                     _PR2	set	146
   211     009F                     _ADCON1	set	159
   212     009E                     _ADRESL	set	158
   213                           
   214                           	psect	cinit
   215     07FA                     start_initialization:	
   216                           ; #config settings
   217                           
   218     07FA                     __initialization:
   219                           
   220                           ; Clear objects allocated to COMMON
   221     07FA  01FA               	clrf	__pbssCOMMON& (0+127)
   222     07FB  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   223     07FC                     end_of_initialization:	
   224                           ;End of C runtime variable initialization code
   225                           
   226     07FC                     __end_of__initialization:
   227     07FC  0183               	clrf	3
   228     07FD  120A  118A  2FA3   	ljmp	_main	;jump to C main() function
   229                           
   230                           	psect	bssCOMMON
   231     007A                     __pbssCOMMON:
   232     007A                     _adc:
   233     007A                     	ds	2
   234                           
   235                           	psect	cstackCOMMON
   236     0070                     __pcstackCOMMON:
   237     0070                     ?_main:
   238     0070                     ?_adc_reading:	
   239                           ; 1 bytes @ 0x0
   240                           
   241     0070                     ?___wmul:	
   242                           ; 2 bytes @ 0x0
   243                           
   244     0070                     ___wmul@multiplier:	
   245                           ; 2 bytes @ 0x0
   246                           
   247                           
   248                           ; 2 bytes @ 0x0
   249     0070                     	ds	2
   250     0072                     ??_adc_reading:
   251     0072                     ___wmul@multiplicand:	
   252                           ; 1 bytes @ 0x2
   253                           
   254                           
   255                           ; 2 bytes @ 0x2
   256     0072                     	ds	2
   257     0074                     ??___wmul:
   258     0074                     ___wmul@product:	
   259                           ; 1 bytes @ 0x4
   260                           
   261                           
   262                           ; 2 bytes @ 0x4
   263     0074                     	ds	2
   264     0076                     ??_main:
   265                           
   266                           ; 1 bytes @ 0x6
   267     0076                     	ds	2
   268     0078                     main@pwm:
   269                           
   270                           ; 2 bytes @ 0x8
   271     0078                     	ds	2
   272                           
   273                           	psect	maintext
   274     07A3                     __pmaintext:	
   275 ;;
   276 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   277 ;;
   278 ;; *************** function _main *****************
   279 ;; Defined at:
   280 ;;		line 27 in file "PWM.c"
   281 ;; Parameters:    Size  Location     Type
   282 ;;		None
   283 ;; Auto vars:     Size  Location     Type
   284 ;;  pwm             2    8[COMMON] unsigned int 
   285 ;; Return value:  Size  Location     Type
   286 ;;                  1    wreg      void 
   287 ;; Registers used:
   288 ;;		wreg, status,2, status,0, pclath, cstack
   289 ;; Tracked objects:
   290 ;;		On entry : B00/0
   291 ;;		On exit  : 0/0
   292 ;;		Unchanged: 0/0
   293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   294 ;;      Params:         0       0       0       0       0
   295 ;;      Locals:         2       0       0       0       0
   296 ;;      Temps:          2       0       0       0       0
   297 ;;      Totals:         4       0       0       0       0
   298 ;;Total ram usage:        4 bytes
   299 ;; Hardware stack levels required when called: 1
   300 ;; This function calls:
   301 ;;		___wmul
   302 ;;		_adc_reading
   303 ;; This function is called by:
   304 ;;		Startup code after reset
   305 ;; This function uses a non-reentrant model
   306 ;;
   307                           
   308     07A3                     _main:	
   309                           ;psect for function _main
   310                           
   311     07A3                     l696:	
   312                           ;incstack = 0
   313                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   314                           
   315                           
   316                           ;PWM.c: 29:     ADCON1 = 0b10000000; ADCON0 = 0b11001000; ADCON0bits.ADON = 1;
   317     07A3  3080               	movlw	128
   318     07A4  1683               	bsf	3,5	;RP0=1, select bank1
   319     07A5  1303               	bcf	3,6	;RP1=0, select bank1
   320     07A6  009F               	movwf	31	;volatile
   321     07A7  30C8               	movlw	200
   322     07A8  1283               	bcf	3,5	;RP0=0, select bank0
   323     07A9  1303               	bcf	3,6	;RP1=0, select bank0
   324     07AA  009F               	movwf	31	;volatile
   325     07AB                     l698:
   326     07AB  141F               	bsf	31,0	;volatile
   327                           
   328                           ;PWM.c: 30:     PR2 = 0x3E; CCPR2L = 0; TRISCbits.TRISC1 = 0; T2CON = 0b00000011; CCP2CO
      +                          N = 0b00001100; TMR2 = 0; T2CONbits.TMR2ON = 1;;
   329     07AC  303E               	movlw	62
   330     07AD  1683               	bsf	3,5	;RP0=1, select bank1
   331     07AE  1303               	bcf	3,6	;RP1=0, select bank1
   332     07AF  0092               	movwf	18	;volatile
   333     07B0                     l700:
   334     07B0  1283               	bcf	3,5	;RP0=0, select bank0
   335     07B1  1303               	bcf	3,6	;RP1=0, select bank0
   336     07B2  019B               	clrf	27	;volatile
   337     07B3                     l702:
   338     07B3  1683               	bsf	3,5	;RP0=1, select bank1
   339     07B4  1303               	bcf	3,6	;RP1=0, select bank1
   340     07B5  1087               	bcf	7,1	;volatile
   341     07B6                     l704:
   342     07B6  3003               	movlw	3
   343     07B7  1283               	bcf	3,5	;RP0=0, select bank0
   344     07B8  1303               	bcf	3,6	;RP1=0, select bank0
   345     07B9  0092               	movwf	18	;volatile
   346     07BA                     l706:
   347     07BA  300C               	movlw	12
   348     07BB  009D               	movwf	29	;volatile
   349     07BC                     l708:
   350     07BC  0191               	clrf	17	;volatile
   351     07BD                     l710:
   352     07BD  1512               	bsf	18,2	;volatile
   353     07BE                     l712:
   354                           
   355                           ;PWM.c: 34:         ADCON0bits.CHS = 2; adc_reading();
   356     07BE  081F               	movf	31,w	;volatile
   357     07BF  39C3               	andlw	-61
   358     07C0  3808               	iorlw	8
   359     07C1  009F               	movwf	31	;volatile
   360     07C2                     l714:
   361     07C2  120A  118A  2770  120A  118A  	fcall	_adc_reading
   362                           
   363                           ;PWM.c: 35:         adc = adc_reading();
   364     07C7  120A  118A  2770  120A  118A  	fcall	_adc_reading
   365     07CC  0871               	movf	?_adc_reading+1,w
   366     07CD  00FB               	movwf	_adc+1
   367     07CE  0870               	movf	?_adc_reading,w
   368     07CF  00FA               	movwf	_adc
   369     07D0                     l716:
   370                           
   371                           ;PWM.c: 37:         { unsigned int pwm; pwm = ((adc - 0) * (60 - 0) / (256 - 0) + 0); CC
      +                          PR2L = (pwm >> 2); };
   372     07D0  087B               	movf	_adc+1,w
   373     07D1  00F1               	movwf	___wmul@multiplier+1
   374     07D2  087A               	movf	_adc,w
   375     07D3  00F0               	movwf	___wmul@multiplier
   376     07D4  303C               	movlw	60
   377     07D5  00F2               	movwf	___wmul@multiplicand
   378     07D6  3000               	movlw	0
   379     07D7  00F3               	movwf	___wmul@multiplicand+1
   380     07D8  120A  118A  277E  120A  118A  	fcall	___wmul
   381     07DD  0870               	movf	?___wmul,w
   382     07DE  00F6               	movwf	??_main
   383     07DF  0871               	movf	?___wmul+1,w
   384     07E0  00F7               	movwf	??_main+1
   385     07E1  0877               	movf	??_main+1,w
   386     07E2  00F6               	movwf	??_main
   387     07E3  01F7               	clrf	??_main+1
   388     07E4  0876               	movf	??_main,w
   389     07E5  00F8               	movwf	main@pwm
   390     07E6  0877               	movf	??_main+1,w
   391     07E7  00F9               	movwf	main@pwm+1
   392     07E8                     l718:
   393     07E8  0879               	movf	main@pwm+1,w
   394     07E9  00F7               	movwf	??_main+1
   395     07EA  0878               	movf	main@pwm,w
   396     07EB  00F6               	movwf	??_main
   397     07EC  1003               	clrc
   398     07ED  0CF7               	rrf	??_main+1,f
   399     07EE  0CF6               	rrf	??_main,f
   400     07EF  1003               	clrc
   401     07F0  0CF7               	rrf	??_main+1,f
   402     07F1  0CF6               	rrf	??_main,f
   403     07F2  0876               	movf	??_main,w
   404     07F3  1283               	bcf	3,5	;RP0=0, select bank0
   405     07F4  1303               	bcf	3,6	;RP1=0, select bank0
   406     07F5  009B               	movwf	27	;volatile
   407     07F6  2FBE               	goto	l712
   408     07F7  120A  118A  2800   	ljmp	start
   409     07FA                     __end_of_main:
   410                           
   411                           	psect	text1
   412     0770                     __ptext1:	
   413 ;; *************** function _adc_reading *****************
   414 ;; Defined at:
   415 ;;		line 21 in file "./../../api/machine/adc.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;		None
   418 ;; Auto vars:     Size  Location     Type
   419 ;;		None
   420 ;; Return value:  Size  Location     Type
   421 ;;                  2    0[COMMON] unsigned int 
   422 ;; Registers used:
   423 ;;		wreg
   424 ;; Tracked objects:
   425 ;;		On entry : 0/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   429 ;;      Params:         2       0       0       0       0
   430 ;;      Locals:         0       0       0       0       0
   431 ;;      Temps:          0       0       0       0       0
   432 ;;      Totals:         2       0       0       0       0
   433 ;;Total ram usage:        2 bytes
   434 ;; Hardware stack levels used: 1
   435 ;; This function calls:
   436 ;;		Nothing
   437 ;; This function is called by:
   438 ;;		_main
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442     0770                     _adc_reading:	
   443                           ;psect for function _adc_reading
   444                           
   445     0770                     l676:	
   446                           ;incstack = 0
   447                           ; Regs used in _adc_reading: [wreg]
   448                           
   449                           
   450                           ;./../../api/machine/adc.c: 22:     ADCON0bits.GO_DONE = 1;
   451     0770  1283               	bcf	3,5	;RP0=0, select bank0
   452     0771  1303               	bcf	3,6	;RP1=0, select bank0
   453     0772  149F               	bsf	31,1	;volatile
   454     0773                     l27:	
   455                           ;./../../api/machine/adc.c: 23:     while (ADCON0bits.GO_DONE == 1);
   456                           
   457     0773  189F               	btfsc	31,1	;volatile
   458     0774  2F76               	goto	u61
   459     0775  2F77               	goto	u60
   460     0776                     u61:
   461     0776  2F73               	goto	l27
   462     0777                     u60:
   463     0777                     l678:
   464                           
   465                           ;./../../api/machine/adc.c: 24:     return ((ADRESH << 8) | ADRESL);
   466     0777  081E               	movf	30,w	;volatile
   467     0778  00F1               	movwf	?_adc_reading+1
   468     0779  1683               	bsf	3,5	;RP0=1, select bank1
   469     077A  1303               	bcf	3,6	;RP1=0, select bank1
   470     077B  081E               	movf	30,w	;volatile
   471     077C  00F0               	movwf	?_adc_reading
   472     077D                     l30:
   473     077D  0008               	return
   474     077E                     __end_of_adc_reading:
   475                           
   476                           	psect	text2
   477     077E                     __ptext2:	
   478 ;; *************** function ___wmul *****************
   479 ;; Defined at:
   480 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;  multiplier      2    0[COMMON] unsigned int 
   483 ;;  multiplicand    2    2[COMMON] unsigned int 
   484 ;; Auto vars:     Size  Location     Type
   485 ;;  product         2    4[COMMON] unsigned int 
   486 ;; Return value:  Size  Location     Type
   487 ;;                  2    0[COMMON] unsigned int 
   488 ;; Registers used:
   489 ;;		wreg, status,2, status,0
   490 ;; Tracked objects:
   491 ;;		On entry : 0/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   495 ;;      Params:         4       0       0       0       0
   496 ;;      Locals:         2       0       0       0       0
   497 ;;      Temps:          0       0       0       0       0
   498 ;;      Totals:         6       0       0       0       0
   499 ;;Total ram usage:        6 bytes
   500 ;; Hardware stack levels used: 1
   501 ;; This function calls:
   502 ;;		Nothing
   503 ;; This function is called by:
   504 ;;		_main
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508     077E                     ___wmul:	
   509                           ;psect for function ___wmul
   510                           
   511     077E                     l682:	
   512                           ;incstack = 0
   513                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   514                           
   515     077E  01F4               	clrf	___wmul@product
   516     077F  01F5               	clrf	___wmul@product+1
   517     0780                     l684:
   518     0780  1C70               	btfss	___wmul@multiplier,0
   519     0781  2F83               	goto	u71
   520     0782  2F84               	goto	u70
   521     0783                     u71:
   522     0783  2F8A               	goto	l126
   523     0784                     u70:
   524     0784                     l686:
   525     0784  0872               	movf	___wmul@multiplicand,w
   526     0785  07F4               	addwf	___wmul@product,f
   527     0786  1803               	skipnc
   528     0787  0AF5               	incf	___wmul@product+1,f
   529     0788  0873               	movf	___wmul@multiplicand+1,w
   530     0789  07F5               	addwf	___wmul@product+1,f
   531     078A                     l126:
   532     078A  3001               	movlw	1
   533     078B                     u85:
   534     078B  1003               	clrc
   535     078C  0DF2               	rlf	___wmul@multiplicand,f
   536     078D  0DF3               	rlf	___wmul@multiplicand+1,f
   537     078E  3EFF               	addlw	-1
   538     078F  1D03               	skipz
   539     0790  2F8B               	goto	u85
   540     0791                     l688:
   541     0791  3001               	movlw	1
   542     0792                     u95:
   543     0792  1003               	clrc
   544     0793  0CF1               	rrf	___wmul@multiplier+1,f
   545     0794  0CF0               	rrf	___wmul@multiplier,f
   546     0795  3EFF               	addlw	-1
   547     0796  1D03               	skipz
   548     0797  2F92               	goto	u95
   549     0798                     l690:
   550     0798  0870               	movf	___wmul@multiplier,w
   551     0799  0471               	iorwf	___wmul@multiplier+1,w
   552     079A  1D03               	btfss	3,2
   553     079B  2F9D               	goto	u101
   554     079C  2F9E               	goto	u100
   555     079D                     u101:
   556     079D  2F80               	goto	l684
   557     079E                     u100:
   558     079E                     l692:
   559     079E  0875               	movf	___wmul@product+1,w
   560     079F  00F1               	movwf	?___wmul+1
   561     07A0  0874               	movf	___wmul@product,w
   562     07A1  00F0               	movwf	?___wmul
   563     07A2                     l128:
   564     07A2  0008               	return
   565     07A3                     __end_of___wmul:
   566     007E                     btemp	set	126	;btemp
   567     007E                     wtemp0	set	126
   568                           
   569                           	psect	idloc
   570                           
   571                           ;Config register IDLOC0 @ 0x2000
   572                           ;	unspecified, using default values
   573     2000                     	org	8192
   574     2000  3FFF               	dw	16383
   575                           
   576                           ;Config register IDLOC1 @ 0x2001
   577                           ;	unspecified, using default values
   578     2001                     	org	8193
   579     2001  3FFF               	dw	16383
   580                           
   581                           ;Config register IDLOC2 @ 0x2002
   582                           ;	unspecified, using default values
   583     2002                     	org	8194
   584     2002  3FFF               	dw	16383
   585                           
   586                           ;Config register IDLOC3 @ 0x2003
   587                           ;	unspecified, using default values
   588     2003                     	org	8195
   589     2003  3FFF               	dw	16383
   590                           
   591                           	psect	config
   592                           
   593                           ;Config register CONFIG1 @ 0x2007
   594                           ;	Oscillator Selection bits
   595                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   596                           ;	Watchdog Timer Enable bit
   597                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   598                           ;	Power-up Timer Enable bit
   599                           ;	PWRTE = OFF, PWRT disabled
   600                           ;	RE3/MCLR pin function select bit
   601                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   602                           ;	Code Protection bit
   603                           ;	CP = OFF, Program memory code protection is disabled
   604                           ;	Data Code Protection bit
   605                           ;	CPD = OFF, Data memory code protection is disabled
   606                           ;	Brown Out Reset Selection bits
   607                           ;	BOREN = OFF, BOR disabled
   608                           ;	Internal External Switchover bit
   609                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   610                           ;	Fail-Safe Clock Monitor Enabled bit
   611                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   612                           ;	Low Voltage Programming Enable bit
   613                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   614                           ;	In-Circuit Debugger Mode bit
   615                           ;	DEBUG = 0x1, unprogrammed default
   616     2007                     	org	8199
   617     2007  20D2               	dw	8402
   618                           
   619                           ;Config register CONFIG2 @ 0x2008
   620                           ;	Brown-out Reset Selection bit
   621                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   622                           ;	Flash Program Memory Self Write Enable bits
   623                           ;	WRT = OFF, Write protection off
   624     2008                     	org	8200
   625     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     267
                                              6 COMMON     4     4      0
                             ___wmul
                        _adc_reading
 ---------------------------------------------------------------------------------
 (1) _adc_reading                                          2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _adc_reading

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Jan 31 09:13:14 2024

                     l30 077D                       l27 0773                       u60 0777  
                     u61 0776                       u70 0784                       u71 0783  
                     u85 078B                       u95 0792      ___wmul@multiplicand 0072  
                    l126 078A                      l128 07A2                      l700 07B0  
                    l710 07BD                      l702 07B3                      l712 07BE  
                    l704 07B6                      l714 07C2                      l706 07BA  
                    l716 07D0                      l708 07BC                      l718 07E8  
                    l690 0798                      l682 077E                      l692 079E  
                    l684 0780                      l676 0770                      l686 0784  
                    l678 0777                      l688 0791                      l696 07A3  
                    l698 07AB                      u100 079E                      u101 079D  
                    _PR2 0092                      _adc 007A                     _TMR2 0011  
                   _main 07A3                     btemp 007E                     start 0000  
                  ?_main 0070                    _T2CON 0012                    status 0003  
                  wtemp0 007E          __initialization 07FA             __end_of_main 07FA  
                 ??_main 0076                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   _ADRESL 009E                   _CCPR2L 001B  
                 ___wmul 077E  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 07A3                  ?___wmul 0070                  _CCP2CON 001D  
          ??_adc_reading 0072                  __ptext1 0770                  __ptext2 077E  
              _T2CONbits 0012      __end_of_adc_reading 077E                  main@pwm 0078  
   end_of_initialization 07FC                _TRISCbits 0087           __end_of___wmul 07A3  
            _adc_reading 0770      start_initialization 07FA                 ??___wmul 0074  
            __pbssCOMMON 007A                ___latbits 0002           ___wmul@product 0074  
             _ADCON0bits 001F        ___wmul@multiplier 0070             ?_adc_reading 0070  
