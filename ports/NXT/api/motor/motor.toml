# NXC Output

# Constants for use with set_output                                              
"update_flags_field"      = "UpdateFlagsField"                   
"output_mode_field"       = "OutputModeField"                    
"power_field"             = "PowerField"                         
"actual_speed_field"      = "ActualSpeedField"                   
"tacho_count_field"       = "TachoCountField"                    
"tacho_limit_field"       = "TachoLimitField"                    
"run_state_field"         = "RunStateField"                      
"turn_ratio_field"        = "TurnRatioField"                     
"reg_mode_field"          = "RegModeField"                       
"overload_field"          = "OverloadField"                      
"reg_p_value_field"       = "RegPValueField"                     
"reg_i_value_field"       = "RegIValueField"                     
"reg_d_value_field"       = "RegDValueField"                     
"block_tacho_count_field" = "BlockTachoCountField"            
"rotation_count_field"    = "RotationCountField"              
"output_options_field"    = "OutputOptionsField"              
"max_speed_field"         = "MaxSpeedField"                   
"max_acceleration_field"  = "MaxAccelerationField"

# Constant offsets into the Output module IOMAP structure. 
"offset_tacho_count"          = "OutputOffsetTachoCount"        
"offset_block_tacho_count"    = "OutputOffsetBlockTachoCount"        
"offset_rotation_count"       = "OutputOffsetRotationCount"        
"offset_tacho_limit"          = "OutputOffsetTachoLimit"        
"offset_motor_rpm"            = "OutputOffsetMotorRPM"           
"offset_flags"                = "OutputOffsetFlags"                
"offset_mode"                 = "OutputOffsetMode"                
"offset_speed"                = "OutputOffsetSpeed"                
"offset_actual_speed"         = "OutputOffsetActualSpeed"                
"offset_reg_p_parameter"      = "OutputOffsetRegPParameter"        
"offset_reg_i_parameter"      = "OutputOffsetRegIParameter"        
"offset_reg_d_parameter"      = "OutputOffsetRegDParameter"        
"offset_run_state"            = "OutputOffsetRunState"           
"offset_reg_mode"             = "OutputOffsetRegMode"            
"offset_overloaded"           = "OutputOffsetOverloaded"        
"offset_sync_turn_parameter"  = "OutputOffsetSyncTurnParameter"        
"offset_options"              = "OutputOffsetOptions"           
"offset_max_speed"            = "OutputOffsetMaxSpeed"           
"offset_max_accel"            = "OutputOffsetMaxAccel"           
"offset_regulation_time"      = "OutputOffsetRegulationTime"            
"offset_regulation_options"   = "OutputOffsetRegulationOptions"

# Output port constants are used when calling motor control API functions. 
"a"	    = "OUT_A"  
"b"	    = "OUT_B"  
"c"	    = "OUT_C"  
"ab"	= "OUT_AB" 
"ac"	= "OUT_AC" 
"bc"	= "OUT_BC" 
"abc"	= "OUT_ABC"

# Use these constants to configure the desired mode for the specified motor                                              : coast, motoron, brake, or regulated.
# Mode constants can be combined with bitwise OR. 
"mode_coast"      = "OUT_MODE_COAST"       
"mode_motoron"    = "OUT_MODE_MOTORON"    
"mode_brake"      = "OUT_MODE_BRAKE"       
"mode_regulated"  = "OUT_MODE_REGULATED"   
"mode_regmethod"  = "OUT_MODE_REGMETHOD"

# Use these constants to configure the desired options for the specified motor                                              : hold at limit and ramp down to limit.
# Option constants can be combined with bitwise OR. 
"option_holdatlimit"    	= "OUT_OPTION_HOLDATLIMIT"    
"option_rampdowntolimit"	= "OUT_OPTION_RAMPDOWNTOLIMIT"

# Use these constants to configure the desired regulation mode for the specified motor                                              : none, speed regulation, 
# multi-motor synchronization, or position regulation                                               . 
"regmode_idle"    = "OUT_REGMODE_IDLE"  
"regmode_speed"   = "OUT_REGMODE_SPEED" 
"regmode_sync"    = "OUT_REGMODE_SYNC"  
"regmode_pos"     = "OUT_REGMODE_POS" 

# Use these constants to configure the desired run state for the specified motor                                              : 
# idle, rampup, running, rampdown, or hold. 
"runstate_idle"       = "OUT_RUNSTATE_IDLE"       
"runstate_rampup"     = "OUT_RUNSTATE_RAMPUP"     
"runstate_running"    = "OUT_RUNSTATE_RUNNING"    
"runstate_rampdown"   = "OUT_RUNSTATE_RAMPDOWN"   
"runstate_hold"       = "OUT_RUNSTATE_HOLD"

# Use these constants to specify which motor values need to be updated.
# Update flag constants can be combined with bitwise OR. 
"uf_update_mode"                  = "UF_UPDATE_MODE"                   
"uf_update_speed"                 = "UF_UPDATE_SPEED"                  
"uf_update_tacho_limit"           = "UF_UPDATE_TACHO_LIMIT"            
"uf_update_reset_count"           = "UF_UPDATE_RESET_COUNT"            
"uf_update_pid_values"            = "UF_UPDATE_PID_VALUES"             
"uf_update_reset_block_count"     = "UF_UPDATE_RESET_BLOCK_COUNT"      
"uf_update_reset_rotation_count"  = "UF_UPDATE_RESET_ROTATION_COUNT"   
"uf_pending_updates"              = "UF_PENDING_UPDATES"  

# Use these constants to configure the desired options for position regulation. 
"regoption_no_saturation"		= "OUT_REGOPTION_NO_SATURATION" 

# PID constants are for adjusting the Proportional, Integral, and Derivative motor controller parameters. 
"pid_0"   = "PID_0"   
"pid_1"   = "PID_1"   
"pid_2"   = "PID_2"   
"pid_3"   = "PID_3"   
"pid_4"   = "PID_4"   
"pid_5"   = "PID_5"   
"pid_6"   = "PID_6"   
"pid_7"   = "PID_7"   

# Use these constants to specify which of the three tachometer counters should be reset.
# Reset constants can be combined with bitwise OR. 
"reset_none"              = "RESET_NONE"              
"reset_count"             = "RESET_COUNT"             
"reset_block_count"       = "RESET_BLOCK_COUNT"       
"reset_rotation_count"    = "RESET_ROTATION_COUNT"    
"reset_blockandtacho"     = "RESET_BLOCKANDTACHO"     
"reset_all"               = "RESET_ALL"     

# Functions for accessing and modifying output module features. 
"motor__set_pwn_freq("             = "SetMotorPwnFreq("                 
"motor__set_regulation_time("      = "SetMotorRegulationTime("                 
"motor__set_regulation_options("   = "SetMotorRegulationOptions("                 
"motor__forward_sync_pid("         = "OnFwdSyncPID("                 
"motor__forward_sync_ex_pid("      = "OnFwdSyncExPID("                 
"motor__reverse_sync_pid("         = "OnRevSyncPID("                 
"motor__reverse_sync_ex_pid("      = "OnRevSyncExPID("                 
"motor__forward_reg_pid("          = "OnFwdRegPID("                 
"motor__forward_reg_ex_pid("       = "OnFwdRegExPID("                 
"motor__reverse_reg_pid("          = "OnRevRegPID("                 
"motor__reverse_reg_ex_pid("       = "OnRevRegExPID("                 
"motor__off("                      = "Off("                       
"motor__off_ex("                   = "OffEx("                     
"motor__coast("                    = "Coast("                     
"motor__coast_ex("                 = "CoastEx("                   
"motor__float("                    = "Float("                     
"motor__forward("                  = "OnFwd("                     
"motor__forward_ex("               = "OnFwdEx("                   
"motor__reverse("                  = "OnRev("                     
"motor__reverse_ex("               = "OnRevEx("                   
"motor__forward_reg("              = "OnFwdReg("                  
"motor__forward_reg_ex("           = "OnFwdRegEx("                 
"motor__reverse_reg("              = "OnRevReg("                  
"motor__reverse_reg_ex("           = "OnRevRegEx("                 
"motor__forward_sync("             = "OnFwdSync("                 
"motor__forward_sync_ex("          = "OnFwdSyncEx("                 
"motor__reverse_sync("             = "OnRevSync("                 
"motor__reverse_sync_ex("          = "OnRevSyncEx("                 
"motor__rotate("                   = "RotateMotor("                 
"motor__rotate_pid("               = "RotateMotorPID("                 
"motor__rotate_ex("                = "RotateMotorEx("                 
"motor__rotate_ex_pid("            = "RotateMotorExPID("                 
"motor__reset_tacho_count("        = "ResetTachoCount("                 
"motor__reset_block_tacho_count("  = "ResetBlockTachoCount("                 
"motor__reset_rotation_count("     = "ResetRotationCount("                 
"motor__reset_all_tacho_counts("   = "ResetAllTachoCounts("                 
"set_output("               	   = "SetOutput("                 
"get_output("               	   = "GetOutput("                 
"motor__mode("                     = "MotorMode("                 
"motor__power("                    = "MotorPower("                 
"motor__actual_speed("             = "MotorActualSpeed("                 
"motor__tacho_count("              = "MotorTachoCount("                 
"motor__tacho_limit("              = "MotorTachoLimit("                 
"motor__run_state("                = "MotorRunState("                 
"motor__turn_ratio("               = "MotorTurnRatio("                 
"motor__regulation("               = "MotorRegulation("                 
"motor__overload("                 = "MotorOverload("                 
"motor__reg_p_value("              = "MotorRegPValue("                 
"motor__reg_i_value("              = "MotorRegIValue("                 
"motor__reg_d_value("              = "MotorRegDValue("                 
"motor__block_tacho_count("        = "MotorBlockTachoCount("                 
"motor__rotation_count("           = "MotorRotationCount("                 
"motor__output_options("           = "MotorOutputOptions("                 
"motor__max_speed("                = "MotorMaxSpeed("                 
"motor__max_acceleration("         = "MotorMaxAcceleration("                 
"motor__pwn_freq("                 = "MotorPwnFreq("                 
"motor__regulation_time("          = "MotorRegulationTime("                 
"motor__regulation_options("       = "MotorRegulationOptions("                 
"pos_reg_enable("           	   = "PosRegEnable("                 
"pos_reg_set_angle("        	   = "PosRegSetAngle("                 
"pos_reg_add_angle("        	   = "PosRegAddAngle("                 
"pos_reg_set_max("          	   = "PosRegSetMax("
